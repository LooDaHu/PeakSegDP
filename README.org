| [[file:tests/testthat][tests]]    | [[https://travis-ci.org/tdhock/PeakSegDP][https://travis-ci.org/tdhock/PeakSegDP.png?branch=master]]             |

PeakSeg is a constrained maximum Poisson likelihood segmentation model
described in "[[http://jmlr.org/proceedings/papers/v37/hocking15.html][PeakSeg: constrained optimal segmentation and supervised
penalty learning for peak detection in count data]]" ([[https://github.com/tdhock/PeakSeg-paper][source]]). We
proposed a [[file:src/cDPA.c][constrained Dynamic Programming Algorithm]] (cDPA) for
computing a model that satisfies the PeakSeg constraints. 

** Installation

#+BEGIN_SRC R
if(!require(devtools))install.packages("devtools")
devtools::install_github("tdhock/PeakSegDP")
#+END_SRC

** Usage

There are two main functions for computing the constrained
segmentation model:

- [[file:R/cDPA.R][cDPA]] is a low-level interface to [[file:src/cDPA.c][the C solver]]. Its inputs are N
  weighted data points and S, the maximum number of segments. It
  outputs a list with components named =loss=, =ends=, and =mean= (S x
  N matrices describing the solution).
- [[file:R/PeakSegDP.R][PeakSegDP]] is a more user-friendly wrapper of the cDPA. Its input
  parameter is P, the maximum number of peaks, which implies S =
  P*2+1. Its input data type is a data.frame with columns =count=,
  =chromStart=, =chromEnd=. It outputs a list of data.frames, =peaks=,
  =error=, =segments=, =breaks=.

** Related work

- As explained in our ICML paper, the cDPA is a quadratic time
  algorithm that is not guaranteed to find the global optimum. For a
  linear time algorithm that recovers the global optimum, use the
  [[https://github.com/tdhock/coseg][coseg]] package.
- For supervised peak detection in ChIP-seq data sets with several
  samples, see our newer method, [[https://github.com/tdhock/PeakSegJoint][PeakSegJoint]].
